// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
        // hms�� �������ɻ�Ϊ����ͨ������ֱ������
        maven { url 'https://developer.huawei.com/repo/'}
        // fcm�� �������� FCM ͨ������ֱ������
        maven { url "https://maven.google.com" }
        maven { url 'https://repo1.maven.org/maven2/' }
        maven {
            url 'https://maven.zohodl.com'
        }
        // Aliyun repositories as fallback
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
//        classpath "com.alibaba:arouter-register:1.0.2"
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
        classpath 'com.google.gms:google-services:4.3.8'
        // hms���������ɻ�Ϊ����ͨ������ֱ������
        classpath 'com.huawei.agconnect:agcp:1.6.0.300'
    }
}
apply from: "depend.gradle"

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    afterEvaluate { project ->
        if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {
            dependencies {
                testImplementation 'junit:junit:4.13.2'
                androidTestImplementation 'androidx.test.ext:junit:1.1.5'
                androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
            }
        }
        
        // Configure Kotlin options to suppress kotlin-android-extensions deprecation warnings
        if (project.plugins.hasPlugin('kotlin-android')) {
            project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
                kotlinOptions {
                    freeCompilerArgs += ["-Xsuppress-version-warnings"]
                }
            }
        }
    }
    
    // Force compatible AndroidX lifecycle versions for AGP 7.1.3
    configurations.all {
        resolutionStrategy {
            force 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
            force 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
            force 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
            force 'androidx.lifecycle:lifecycle-common:2.4.1'
            force 'androidx.lifecycle:lifecycle-process:2.4.1'
            force 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.4.1'
            force 'androidx.lifecycle:lifecycle-service:2.4.1'
            force 'androidx.lifecycle:lifecycle-livedata-core-ktx:2.4.1'
            force 'androidx.core:core:1.8.0'
            force 'androidx.core:core-ktx:1.8.0'
            
            // Force compatible Kotlin stdlib and coroutines versions for Kotlin 1.7.20
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.7.20'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.20'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20'
            force 'org.jetbrains.kotlin:kotlin-stdlib-common:1.7.20'
            force 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
            force 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
        }
    }
}
