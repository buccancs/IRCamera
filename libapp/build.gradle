plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
//        arg("AROUTER_GENERATE_DOC", "enable")//生成doc文档
        arg("room.schemaLocation", "$projectDir/schemas".toString())
        arg("room.incremental", "true")
        arg("room.expandProjection", "true")
    }
}

android {
    namespace 'com.topdon.libapp'
    compileSdk rootProject.ext.android.compileSdk

    defaultConfig {
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures{
        buildConfig = true
        viewBinding = true
        dataBinding = true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
}

//kotlin {
//    experimental {
//        coroutines 'enable'
//    }
//}

dependencies {
    // Only include JAR files in library modules - AAR files cause build errors in library modules
    api fileTree(include: ['*.jar'], dir: 'libs')
    api libs.androidx.appcompat
    api libs.androidx.fragment.ktx
    api libs.material

    api libs.androidx.lifecycle.runtime.ktx
    api libs.androidx.lifecycle.viewmodel.ktx
    api libs.androidx.lifecycle.livedata.ktx

    kapt libs.androidx.room.compiler
    api libs.androidx.room.ktx

    api libs.androidx.work.runtime.ktx

    api libs.retrofit2
    api libs.retrofit2.converter.gson
    api libs.retrofit2.adapter.rxjava2

    api libs.eventbus

    api libs.glide
    kapt libs.glide.compiler

    api libs.rxjava2
    api libs.rxandroid
    api libs.rxpermissions
    api libs.rxlifecycle
    api libs.rxlifecycle.android
    api libs.rxlifecycle.components
    api libs.rxlifecycle.ktx
    api libs.rxlifecycle.android.lifecycle.ktx

    api libs.arouter.api
    kapt libs.arouter.compiler

    api libs.utilcode
    api libs.xxpermissions
    api libs.xlog
    api libs.photoview
    api libs.android.pdf.viewer
    api libs.lottie

    api libs.brvah
    api libs.refresh.layout.kernel
    api libs.refresh.header.classics
    api libs.refresh.header.material

    api libs.okhttp3.logging.interceptor
    api libs.colorpickerview
    api libs.mn.image.browser
    api libs.nifty
    api libs.nifty.effect

    //javacv
    api libs.javacv
    api libs.javacpp

    // Note: LMS AAR dependencies moved to app module due to Gradle limitation
    // Library modules cannot include AAR file dependencies
    // Adding LMS as compileOnly dependency for compilation, app module provides the actual implementation
    compileOnly files('../app/libs/lms_international-3.90.009.0.aar')
}