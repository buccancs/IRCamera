[versions]
# Android Configuration
compileSdk = "34"
minSdk = "24"
targetSdk = "34"
versionCode = "1100"
versionName = "1.10.000"
ndkVersion = "21.3.6528147"

# App Configuration - SoftCode
softcodeTopinfrared = "TC001_DisplaySW_Topinfrared_Adr"
softcodeTopinfrared10 = "TC001_DisplaySW_TopinfraredAndroid10_Adr"
softcodeTopinfraredCn = "TC001_DisplaySW_Topinfrared_GB_Adr"
softcodeTopinfraredCn10 = "TC001_DisplaySW_TopinfraredAndroid10_GB_Adr"

# App Configuration - AppKey
appkeyTopinfrared = "5B2F6F1FD80844FCB6E50BCA19222E76"
appkeyTopinfrared10 = "AD782A05757B458391BFD695A3967EDD"
appkeyTopinfraredCn = "19F791D993B042E2B22D42A974DE92E8"
appkeyTopinfraredCn10 = "058F710E6D3545168F3D19010320F8C3"

# App Configuration - AppSecret
appsecretTopinfrared = "A4A2EE33347A4D7885C26689515567EC"
appsecretTopinfrared10 = "2870276D969B45C1B4A312B336274079"
appsecretTopinfraredCn = "9D33C48FD7CE4440B7D922FBF9B6DE2A"
appsecretTopinfraredCn10 = "F4511AAA6C694E54A3676CF2345A4A8E"

# Kotlin and Core
kotlin = "1.9.24"
agp = "8.11.0"
androidxCore = "1.12.0"
androidxAppcompat = "1.6.1"
fragmentKtx = "1.6.2"
material = "1.11.0"
multidex = "2.0.1"

# Lifecycle
lifecycle = "2.7.0"

# Room
room = "2.5.2"

# Work Manager
work = "2.9.0"

# Coroutines
coroutines = "1.7.3"

# Networking
fastjson = "1.2.78"
jsbridge = "1.0.4"
retrofit = "2.10.0"
okhttp = "4.11.0"

# RxJava
rxjava = "2.2.21"
rxandroid = "2.1.1"

# Navigation
arouter = "1.5.2"

# RxLifecycle
rxpermissions = "0.10.2"
rxlifecycle2 = "2.2.2"
rxlifecycle3 = "3.1.0"

# UI Libraries
ucrop = "2.2.8"
playAppUpdate = "2.1.0"
immersionbar = "3.2.2"
xpopup = "2.10.0"
smartRefreshLayout = "1.1.3"
smartRefreshLayoutV2 = "2.0.6"
smartRefreshHeaderV2 = "2.0.6"
brvah = "3.0.11"
colorpickerview = "2.3.0"
photoview = "2.3.0"
nifty = "2.4.0"

# Image Loading
glide = "4.15.1"

# Utils
utilcode = "1.31.1"
xxpermissions = "18.5"
xlog = "1.11.0"
lottie = "6.0.1"
eventbus = "3.3.1"

# Compass and sensor libraries - Updated to latest versions from Maven Central
andromeda = "16.0.1"
andromedaUser = "6.2.0"

# JavaCV
javacv = "1.5.7"

# LMS SDK
lmsInternational = "3.90.009.0"
lmsChina = "3.90.076"

# FFmpeg
ffmpeg = "5.0-1.5.7"

# Third-party services
wechatSdk = "6.8.0"
umengApm = "1.9.0"
zohoSalesiq = "7.0.0"



# UMeng - Updated to latest versions from Maven Central
umengCommon = "9.8.8"
umengAsms = "1.8.7.2"
umengAnalytics = "9.8.8"

# Testing
junit = "4.13.2"
testExtJunit = "1.1.5"
testEspressoCore = "3.5.1"

# Google Services


huaweiAgcp = "1.6.0.300"

# Build Tools
androidGradlePlugin = "8.11.0"
kotlinGradlePlugin = "1.9.24"

[libraries]
# AndroidX Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidxCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidxAppcompat" }
fragment-ktx = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragmentKtx" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
multidex = { group = "androidx.multidex", name = "multidex", version.ref = "multidex" }

# Lifecycle
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }

# Room
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

# Work Manager
work-runtime-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "work" }

# Kotlin
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }

# Networking
fastjson = { group = "com.alibaba", name = "fastjson", version.ref = "fastjson" }
jsbridge = { group = "com.github.lzyzsd", name = "jsbridge", version.ref = "jsbridge" }
retrofit2 = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
adapter-rxjava2 = { group = "com.squareup.retrofit2", name = "adapter-rxjava2", version.ref = "retrofit" }
logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }

# RxJava
rxjava2 = { group = "io.reactivex.rxjava2", name = "rxjava", version.ref = "rxjava" }
rxandroid = { group = "io.reactivex.rxjava2", name = "rxandroid", version.ref = "rxandroid" }

# Navigation
arouter-api = { group = "com.alibaba", name = "arouter-api", version.ref = "arouter" }
arouter-compiler = { group = "com.alibaba", name = "arouter-compiler", version.ref = "arouter" }

# RxLifecycle
rxpermissions = { group = "com.github.tbruyelle", name = "rxpermissions", version.ref = "rxpermissions" }
rxlifecycle = { group = "com.trello.rxlifecycle2", name = "rxlifecycle", version.ref = "rxlifecycle2" }
rxlifecycle-android = { group = "com.trello.rxlifecycle2", name = "rxlifecycle-android", version.ref = "rxlifecycle2" }
rxlifecycle-components = { group = "com.trello.rxlifecycle2", name = "rxlifecycle-components", version.ref = "rxlifecycle2" }
rxlifecycle-ktx = { group = "com.trello.rxlifecycle3", name = "rxlifecycle-kotlin", version.ref = "rxlifecycle3" }
rxlifecycle-android-lifecycle-ktx = { group = "com.trello.rxlifecycle3", name = "rxlifecycle-android-lifecycle-kotlin", version.ref = "rxlifecycle3" }

# UI Libraries
ucrop = { group = "com.github.yalantis", name = "ucrop", version.ref = "ucrop" }
play-app-update = { group = "com.google.android.play", name = "app-update", version.ref = "playAppUpdate" }
immersionbar = { group = "com.gyf.immersionbar", name = "immersionbar", version.ref = "immersionbar" }
xpopup = { group = "com.github.li-xiaojun", name = "XPopup", version.ref = "xpopup" }
smart-refresh-layout = { group = "com.scwang.smartrefresh", name = "SmartRefreshLayout", version.ref = "smartRefreshLayout" }
smart-refresh-header = { group = "com.scwang.smartrefresh", name = "SmartRefreshHeader", version.ref = "smartRefreshLayout" }
refresh-layout-kernel = { group = "com.scwang.smart", name = "refresh-layout-kernel", version.ref = "smartRefreshLayoutV2" }
refresh-header-classics = { group = "com.scwang.smart", name = "refresh-header-classics", version.ref = "smartRefreshHeaderV2" }
refresh-header-material = { group = "com.scwang.smart", name = "refresh-header-material", version.ref = "smartRefreshHeaderV2" }
brvah = { group = "com.github.CymChad", name = "BaseRecyclerViewAdapterHelper", version.ref = "brvah" }
colorpickerview = { group = "com.github.skydoves", name = "colorpickerview", version.ref = "colorpickerview" }
photoview = { group = "com.github.chrisbanes", name = "PhotoView", version.ref = "photoview" }
nifty = { group = "com.nineoldandroids", name = "library", version.ref = "nifty" }

# Image Loading
glide = { group = "com.github.bumptech.glide", name = "glide", version.ref = "glide" }
glide-compiler = { group = "com.github.bumptech.glide", name = "compiler", version.ref = "glide" }

# Utils
utilcode = { group = "com.blankj", name = "utilcodex", version.ref = "utilcode" }
xxpermissions = { group = "com.github.getActivity", name = "XXPermissions", version.ref = "xxpermissions" }
xlog = { group = "com.elvishew", name = "xlog", version.ref = "xlog" }
lottie = { group = "com.airbnb.android", name = "lottie", version.ref = "lottie" }
eventbus = { group = "org.greenrobot", name = "eventbus", version.ref = "eventbus" }

# Compass and sensor libraries
andromeda-core = { group = "com.kylecorry.andromeda", name = "core", version.ref = "andromeda" }
andromeda-sense = { group = "com.kylecorry.andromeda", name = "sense", version.ref = "andromeda" }
andromeda-views = { group = "com.kylecorry.andromeda", name = "views", version.ref = "andromeda" }
compass-sense-user = { group = "com.github.kylecorry31.andromeda", name = "sense", version.ref = "andromedaUser" }
compass-core-user = { group = "com.github.kylecorry31.andromeda", name = "core", version.ref = "andromedaUser" }

# JavaCV
javacv = { group = "org.bytedeco", name = "javacv", version.ref = "javacv" }
javacpp = { group = "org.bytedeco", name = "javacpp", version.ref = "javacv" }

# IR-specific libraries
ir-layout = { group = "com.github.CoderCaiSL", name = "jitpackMvn", version = "+" }

# LMS SDK
lms2-user = { group = "com.topdon.lms.sdk3", name = "lms_international", version.ref = "lmsInternational" }
lms3-user = { group = "com.topdon.lms.sdk3", name = "lms_china", version.ref = "lmsChina" }

# FFmpeg native libraries for IR processing
ffmpeg-android-arm64 = { group = "org.bytedeco", name = "ffmpeg", version.ref = "ffmpeg" }
ffmpeg-android-arm = { group = "org.bytedeco", name = "ffmpeg", version.ref = "ffmpeg" }
ffmpeg-android-x86-64 = { group = "org.bytedeco", name = "ffmpeg", version.ref = "ffmpeg" }
ffmpeg-android-x86 = { group = "org.bytedeco", name = "ffmpeg", version.ref = "ffmpeg" }

# Third-party services
wechat-sdk = { group = "com.tencent.mm.opensdk", name = "wechat-sdk-android", version.ref = "wechatSdk" }
umeng-apm = { group = "com.umeng.umsdk", name = "apm", version.ref = "umengApm" }
zoho-salesiq = { group = "com.zoho.salesiq", name = "mobilisten", version.ref = "zohoSalesiq" }



# UMeng
umeng-common = { group = "com.umeng.umsdk", name = "common", version.ref = "umengCommon" }
umeng-asms = { group = "com.umeng.umsdk", name = "asms", version.ref = "umengAsms" }
umeng-analytics = { group = "com.umeng.umsdk", name = "analytics", version.ref = "umengAnalytics" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "testExtJunit" }
test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "testEspressoCore" }

# Build Tools (for buildscript classpath)
android-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }


huawei-agconnect = { group = "com.huawei.agconnect", name = "agcp", version.ref = "huaweiAgcp" }

[bundles]
androidx-lifecycle = ["lifecycle-runtime-ktx", "lifecycle-viewmodel-ktx", "lifecycle-livedata-ktx"]
rx-lifecycle = ["rxlifecycle", "rxlifecycle-android", "rxlifecycle-components"]
rx-lifecycle-ktx = ["rxlifecycle-ktx", "rxlifecycle-android-lifecycle-ktx"]
retrofit = ["retrofit2", "converter-gson", "adapter-rxjava2", "logging-interceptor"]
smart-refresh = ["smart-refresh-layout", "smart-refresh-header"]
smart-refresh-v2 = ["refresh-layout-kernel", "refresh-header-classics", "refresh-header-material"]

umeng = ["umeng-common", "umeng-asms", "umeng-analytics"]
andromeda = ["andromeda-core", "andromeda-sense", "andromeda-views"]
javacv-core = ["javacv", "javacpp"]
ffmpeg-android = ["ffmpeg-android-arm64", "ffmpeg-android-arm", "ffmpeg-android-x86-64", "ffmpeg-android-x86"]

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

huawei-agconnect = { id = "com.huawei.agconnect", version.ref = "huaweiAgcp" }