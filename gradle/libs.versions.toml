[versions]
# Kotlin & Core
kotlin = "2.0.0"
coroutines = "1.8.0"

# AndroidX - Using latest stable versions compatible with AGP 8.1.4
appcompat = "1.7.0"
fragment-ktx = "1.6.2" 
multidex = "2.0.1"
lifecycle = "2.8.4"
core = "1.13.1"
room = "2.6.1"
work-runtime-ktx = "2.9.1"
recyclerview = "1.3.2"
constraintlayout = "2.1.4"

# Security & Privacy
security-crypto = "1.1.0-alpha06"
biometric = "1.2.0-alpha05"

# Google
material = "1.12.0"
play-services-base = "18.4.0"

# Network - Updated for security
retrofit2 = "2.11.0"
okhttp3-logging-interceptor = "4.12.0"
gson = "2.10.1"

# Reactive
rxjava2 = "2.2.21"
rxandroid = "2.1.1"
rxpermissions = "0.10.2"
rxlifecycle = "2.2.2"

# EventBus
eventbus = "3.3.1"

# Image Loading - Updated
glide = "4.16.0"

# Routing
arouter = "1.5.2"

# Utils - Updated versions
utilcode = "1.31.1"
xxpermissions = "20.0"
xlog = "1.11.0"
photoview = "2.3.0"
android-pdf-viewer = "3.2.0-beta.1"
lottie = "6.4.1"

# RecyclerView
brvah = "3.0.10"
refresh-layout = "2.0.3"

# Testing - Modern versions
junit = "4.13.2"
androidx-test-junit = "1.1.5"
espresso = "3.5.1"
mockito = "5.12.0"

# Custom Libraries
ir-layout = "+"
colorpickerview = "2.3.0"
mn-image-browser = "V1.3.7"
andromeda = "6.2.0"
nifty = "1.4.6"

# UMeng SDK
umeng-common = "9.8.8"
umeng-apm = "1.9.0"
umeng-abtest = "1.0.1"

# Topdon LMS
lms2-international = "3.90.009.0"
lms3-china = "3.90.076"

# JavaCV
javacv = "1.5.10"
javacpp = "1.5.10"
ffmpeg = "6.0-1.5.9"

# Video Player
gsy-video-player = "v8.6.0-release-jitpack"
exoplayer = "2.19.1"

[libraries]
# AndroidX
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment-ktx" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }
androidx-core = { module = "androidx.core:core", version.ref = "core" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "lifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }
androidx-lifecycle-livedata-core-ktx = { module = "androidx.lifecycle:lifecycle-livedata-core-ktx", version.ref = "lifecycle" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work-runtime-ktx" }

# Security & Privacy
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "security-crypto" }
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" }

# Google
material = { module = "com.google.android.material:material", version.ref = "material" }
play-services-base = { module = "com.google.android.gms:play-services-base", version.ref = "play-services-base" }

# Network - Updated versions
retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit2" }
retrofit2-adapter-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit2" }
okhttp3-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3-logging-interceptor" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# Testing - Modern versions
junit = { module = "junit:junit", version.ref = "junit" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-junit" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito" }

# Reactive
rxjava2 = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxjava2" }
rxandroid = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxandroid" }
rxpermissions = { module = "com.github.tbruyelle:rxpermissions", version.ref = "rxpermissions" }
rxlifecycle = { module = "com.trello.rxlifecycle2:rxlifecycle", version.ref = "rxlifecycle" }
rxlifecycle-android = { module = "com.trello.rxlifecycle2:rxlifecycle-android", version.ref = "rxlifecycle" }
rxlifecycle-components = { module = "com.trello.rxlifecycle2:rxlifecycle-components", version.ref = "rxlifecycle" }
rxlifecycle-ktx = { module = "com.trello.rxlifecycle2:rxlifecycle-kotlin", version.ref = "rxlifecycle" }
rxlifecycle-android-lifecycle-ktx = { module = "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin", version.ref = "rxlifecycle" }

# EventBus
eventbus = { module = "org.greenrobot:eventbus", version.ref = "eventbus" }

# Image Loading
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

# Routing
arouter-api = { module = "com.alibaba:arouter-api", version.ref = "arouter" }
arouter-compiler = { module = "com.alibaba:arouter-compiler", version.ref = "arouter" }

# Utils
utilcode = { module = "com.blankj:utilcodex", version.ref = "utilcode" }
xxpermissions = { module = "com.github.getActivity:XXPermissions", version.ref = "xxpermissions" }
xlog = { module = "com.elvishew:xlog", version.ref = "xlog" }
photoview = { module = "com.github.chrisbanes:PhotoView", version.ref = "photoview" }
android-pdf-viewer = { module = "com.github.barteksc:android-pdf-viewer", version.ref = "android-pdf-viewer" }
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }

# RecyclerView
brvah = { module = "com.github.cymchad:BaseRecyclerViewAdapterHelper", version.ref = "brvah" }
refresh-layout-kernel = { module = "com.scwang.smart:refresh-layout-kernel", version.ref = "refresh-layout" }
refresh-header-classics = { module = "com.scwang.smart:refresh-header-classics", version.ref = "refresh-layout" }
refresh-header-material = { module = "com.scwang.smart:refresh-header-material", version.ref = "refresh-layout" }

# Custom Libraries
ir-layout = { module = "com.github.CoderCaiSL:jitpackMvn", version.ref = "ir-layout" }
colorpickerview = { module = "com.github.skydoves:colorpickerview", version.ref = "colorpickerview" }
mn-image-browser = { module = "com.github.maning0303:MNImageBrowser", version.ref = "mn-image-browser" }
andromeda-sense = { module = "com.github.kylecorry31.andromeda:sense", version.ref = "andromeda" }
andromeda-core = { module = "com.github.kylecorry31.andromeda:core", version.ref = "andromeda" }
nifty = { module = "io.github.litao0621:nifty-slider", version.ref = "nifty" }
nifty-effect = { module = "io.github.litao0621:nifty-slider-effect", version.ref = "nifty" }

# UMeng SDK
umeng-common = { module = "com.umeng.umsdk:common", version.ref = "umeng-common" }
umeng-apm = { module = "com.umeng.umsdk:apm", version.ref = "umeng-apm" }
umeng-abtest = { module = "com.umeng.umsdk:abtest", version.ref = "umeng-abtest" }

# Topdon LMS
lms2-international = { module = "com.topdon.lms.sdk3:lms_international", version.ref = "lms2-international" }
lms3-china = { module = "com.topdon.lms.sdk3:lms_china", version.ref = "lms3-china" }

# JavaCV
javacv = { module = "org.bytedeco:javacv", version.ref = "javacv" }
javacpp = { module = "org.bytedeco:javacpp", version.ref = "javacpp" }

# FFmpeg - Updated to v6.0
ffmpeg-android-arm64 = { module = "org.bytedeco:ffmpeg", version = "6.0-1.5.9:android-arm64" }
ffmpeg-android-arm = { module = "org.bytedeco:ffmpeg", version = "6.0-1.5.9:android-arm" }
ffmpeg-android-x86-64 = { module = "org.bytedeco:ffmpeg", version = "6.0-1.5.9:android-x86_64" }
ffmpeg-android-x86 = { module = "org.bytedeco:ffmpeg", version = "6.0-1.5.9:android-x86" }

# ExoPlayer - Modern versions for better compatibility
exoplayer-core = { module = "com.google.android.exoplayer:exoplayer-core", version.ref = "exoplayer" }
exoplayer-ui = { module = "com.google.android.exoplayer:exoplayer-ui", version.ref = "exoplayer" }
exoplayer-dash = { module = "com.google.android.exoplayer:exoplayer-dash", version.ref = "exoplayer" }
exoplayer-hls = { module = "com.google.android.exoplayer:exoplayer-hls", version.ref = "exoplayer" }

# Video Player
gsy-video-player-java = { module = "com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java", version.ref = "gsy-video-player" }
gsy-video-player-exo2 = { module = "com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-ex_so", version.ref = "gsy-video-player" }
gsy-video-player-armv7a = { module = "com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv7a", version.ref = "gsy-video-player" }
gsy-video-player-arm64 = { module = "com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-arm64", version.ref = "gsy-video-player" }

[bundles]
# Common AndroidX bundle - Enhanced
androidx-common = [
    "androidx-appcompat", 
    "androidx-fragment-ktx", 
    "androidx-multidex",
    "androidx-core",
    "androidx-core-ktx",
    "androidx-recyclerview",
    "androidx-constraintlayout"
]

# Security bundle - New
androidx-security = [
    "androidx-security-crypto",
    "androidx-biometric"
]

# Testing bundle - Comprehensive
testing-common = [
    "junit",
    "androidx-test-junit",
    "androidx-test-espresso-core",
    "mockito-core",
    "mockito-android"
]

# Complete Lifecycle bundle
androidx-lifecycle = [
    "androidx-lifecycle-runtime-ktx",
    "androidx-lifecycle-viewmodel-ktx", 
    "androidx-lifecycle-livedata-ktx",
    "androidx-lifecycle-common",
    "androidx-lifecycle-process",
    "androidx-lifecycle-viewmodel-savedstate",
    "androidx-lifecycle-service",
    "androidx-lifecycle-livedata-core-ktx"
]

# RxJava bundle
rxjava = [
    "rxjava2",
    "rxandroid",
    "rxpermissions"
]

# RxLifecycle bundle
rxlifecycle = [
    "rxlifecycle",
    "rxlifecycle-android",
    "rxlifecycle-components",
    "rxlifecycle-ktx",
    "rxlifecycle-android-lifecycle-ktx"
]

# Retrofit bundle
retrofit = [
    "retrofit2",
    "retrofit2-converter-gson",
    "retrofit2-adapter-rxjava2"
]

# Refresh layout bundle
refresh-layout = [
    "refresh-layout-kernel",
    "refresh-header-classics",
    "refresh-header-material"
]

# Andromeda bundle (compass)
andromeda = [
    "andromeda-sense",
    "andromeda-core"
]

# Nifty bundle
nifty = [
    "nifty",
    "nifty-effect"
]

# JavaCV bundle
javacv = [
    "javacv",
    "javacpp"
]

# ExoPlayer bundle - Comprehensive media support
exoplayer = [
    "exoplayer-core",
    "exoplayer-ui", 
    "exoplayer-dash",
    "exoplayer-hls"
]

# GSY Video Player bundle
gsy-video-player = [
    "gsy-video-player-java",
    "gsy-video-player-exo2",
    "gsy-video-player-armv7a",
    "gsy-video-player-arm64"
]

[plugins]
# Android plugins
android-application = { id = "com.android.application", version = "8.1.4" }
android-library = { id = "com.android.library", version = "8.1.4" }

# Kotlin plugins
kotlin-android = { id = "org.jetbrains.kotlin.android", version = "2.0.0" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version = "2.0.0" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version = "2.0.0" }

# Google services
google-services = { id = "com.google.gms.google-services", version = "4.4.2" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version = "3.0.2" }

# Performance & Security
gradle-versions = { id = "com.github.ben-manes.versions", version = "0.51.0" }
dependency-guard = { id = "com.dropbox.dependency-guard", version = "0.5.0" }