plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
}



android {
    namespace 'com.topdon.tc001'
    compileSdk rootProject.ext.android.compileSdk
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        ndkVersion rootProject.ext.android.ndkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "arm64-v8a"
        }

        buildConfigField "String", "VERSION_DATE", "\"${getDayStr()}\""
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "cbd4eafc9049d751fc5a8c58",
                JPUSH_CHANNEL : "developer-default",
        ]

        setProperty("archivesBaseName", "TC001-v${versionName}.google")
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    signingConfigs {
        debug {
            storeFile file('artibox_key/ArtiBox.jks')
            keyAlias 'Artibox'
            storePassword 'artibox2017'
            keyPassword 'artibox2017'
        }
        release {
            storeFile file('artibox_key/ArtiBox.jks')
            keyAlias 'Artibox'
            storePassword 'artibox2017'
            keyPassword 'artibox2017'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }


    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        versionApk(variant, defaultConfig)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    packagingOptions {
        merge 'META-INF/LICENSE-notice.md'
        merge 'META-INF/LICENSE.md'
        merge 'META-INF/proguard/androidx-annotations.pro'
        merge 'META-INF/proguard/coroutines.pro'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'META-INF/LICENSE.md'
        pickFirst 'META-INF/LICENSE-notice.md'
        pickFirst 'lib/arm64-v8a/libnative-window.so'
        pickFirst 'lib/armeabi-v7a/libnative-window.so'
        pickFirst 'lib/armeabi-v7a/libyuv.so'
        pickFirst 'lib/arm64-v8a/libyuv.so'
        pickFirst 'lib/armeabi-v7a/libopencv_java4.so'
        pickFirst 'lib/arm64-v8a/libopencv_java4.so'
        pickFirst 'lib/armeabi-v7a/libomp.so'
        pickFirst 'lib/arm64-v8a/libomp.so'
        pickFirst 'lib/arm64-v8a/liblog.so'
        pickFirst 'lib/armeabi-v7a/liblog.so'
        pickFirst 'lib/arm64-v8a/libUSBUVCCamera.so'
        pickFirst 'lib/armeabi-v7a/libUSBUVCCamera.so'
        pickFirst 'lib/arm64-v8a/libircmd.so'
        pickFirst 'lib/armeabi-v7a/libircmd.so'
        pickFirst 'lib/arm64-v8a/libirparse.so'
        pickFirst 'lib/armeabi-v7a/libirparse.so'
        pickFirst 'lib/arm64-v8a/libirprocess.so'
        pickFirst 'lib/armeabi-v7a/libirprocess.so'
        pickFirst 'lib/arm64-v8a/libirtemp.so'
        pickFirst 'lib/armeabi-v7a/libirtemp.so'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA' 
        exclude 'META-INF/*.RSA'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
        doNotStrip "**/*.so"
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures{
        dataBinding = true
        buildConfig = true
    }
    flavorDimensions 'app'

    productFlavors {
        prod {
            dimension 'app'
            buildConfigField "int", "ENV_TYPE", "0"
            buildConfigField("String", "SOFT_CODE", "\"${rootProject.ext.softCode.topInfrared}\"")
            buildConfigField("String", "APP_KEY", "\"${rootProject.ext.appKey.topInfrared}\"")
            buildConfigField("String", "APP_SECRET", "\"${rootProject.ext.appSecret.topInfrared}\"")
            manifestPlaceholders = [
                    app_name: "IRCamera",
            ]
        }
    }
}
static def getYearStr() {
    return new Date().format('yy')
}
static def getDayStr() {
    return new Date().format('yyMMdd')
}

static def getTimeStr() {
    return new Date().format('HHmm')
}

def versionApk(variant, defaultConfig) {
    variant.outputs.all {
        def appName = "IRCamera.apk"
        def dayStr = getDayStr()
        def nameStr = "IRCamera_" + defaultConfig.versionName + "." + dayStr
        if (variant.name == "prodDebug") {
            appName = nameStr + "_debug.apk"
        } else if (variant.name == "prodRelease") {
            appName = nameStr + ".apk"
        }
        outputFileName = appName
    }
}

def copyApk(type, flavor) {
    def timeStr = getTimeStr()
    copy {
        from "build/outputs/apk/${flavor}/${type}"
        into "../outputs/${type}/"
        include '**/*.apk'
        rename { String fileName ->
            fileName.substring(0, fileName.lastIndexOf(".apk")) + '_build' + timeStr + '.apk'
        }
    }
}

def copyAab(type) {
    def dayStr = getDayStr()
    def timeStr = getTimeStr()
    copy {
        from "build/outputs/bundle/${type}"
        into "../outputs/bundle/${type}/"
        include '**/*.aab'
        rename { String fileName ->
            fileName.substring(0, fileName.lastIndexOf(".google")) + "." + dayStr + "_" + type + '_build' + timeStr + '.aab'
        }
    }
}

project.afterEvaluate {
    tasks.named("assembleProdDebug").configure {
        doLast {
            println "===================== build prod Debug.apk copy ========================="
            copyApk("debug", "prod")
        }
    }
    tasks.named("assembleProdRelease").configure {
        doLast {
            println "===================== build prod Release.apk copy ======================="
            copyApk("release", "prod")
        }
    }
    tasks.named("bundleProdDebug").configure {
        doLast {
            println "===================== build prod Debug.aab copy ======================="
            copyAab("prodDebug")
        }
    }
    tasks.named("bundleProdRelease").configure {
        doLast {
            println "===================== build prod Release.aab copy ======================="
            copyAab("prodRelease")
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation "com.google.android.material:material:1.4.0"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"

    // Kotlin Coroutines - compatible with Kotlin 2.0+
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

    // Room - removed compiler dependency, using reflection-based Room for Kotlin 2.0+
    implementation "androidx.room:room-runtime:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"

    implementation "androidx.work:work-runtime-ktx:2.7.1"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"

    implementation "org.greenrobot:eventbus:3.2.0"

    // Glide upgraded to version that doesn't require annotation processing
    implementation "com.github.bumptech.glide:glide:4.16.0"

    implementation "io.reactivex.rxjava2:rxjava:2.2.20"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "com.github.tbruyelle:rxpermissions:0.10.2"
    implementation "com.trello.rxlifecycle2:rxlifecycle:2.2.2"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:2.2.2"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:2.2.2"
    implementation "com.trello.rxlifecycle2:rxlifecycle-kotlin:2.2.2"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:2.2.2"



    implementation "com.blankj:utilcodex:1.31.0"
    implementation "com.github.getActivity:XXPermissions:20.0"
    implementation "com.elvishew:xlog:1.11.0"
    implementation "com.github.chrisbanes:PhotoView:2.3.0"
    implementation "com.github.barteksc:android-pdf-viewer:2.8.1"
    implementation "com.airbnb.android:lottie:6.0.0"

    implementation "com.github.cymchad:BaseRecyclerViewAdapterHelper:3.0.10"
    implementation "com.scwang.smart:refresh-layout-kernel:2.0.3"
    implementation "com.scwang.smart:refresh-header-classics:2.0.3"
    implementation "com.scwang.smart:refresh-header-material:2.0.3"

    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"
    implementation "com.github.skydoves:colorpickerview:2.2.4"
    implementation "com.github.maning0303:MNImageBrowser:V1.3.7"
    implementation "io.github.litao0621:nifty-slider:1.4.6"
    implementation "io.github.litao0621:nifty-slider-effect:1.4.6"

    implementation "org.bytedeco:javacv:1.5.8"
    implementation "org.bytedeco:javacpp:1.5.8"
    
    implementation 'com.blankj:utilcodex:1.30.6'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.elvishew:xlog:1.10.1'
    implementation 'com.conghuahuadan:superlayout:1.1.0'
    implementation files('libs/ini4j-0.5.5.jar')
    
    implementation files('libs\\abtest-1.0.1.aar')
    implementation files('libs\\auth-number-2.13.2.1.aar')
    implementation files('libs\\lms_international-3.90.009.0.aar')
    implementation files('libs\\logger-2.2.1-release.aar')
    implementation files('libs\\main-2.2.1-release.aar')
    implementation files('libs\\libusbdualsdk_1.3.4_2406271906_standard.aar')
    implementation files('libs\\opengl_1.3.2_standard.aar')
    implementation files('libs\\suplib-release.aar')
    implementation files('libs\\ai-upscale-release.aar')
    implementation files('libs\\libusbirsdk_1.2.3_22041515.aar')
    implementation files('libs\\texturegesture-release.aar')
    implementation files('libs\\library_1.0.aar')
    
    // implementation(name: 'libcommon_1.2.0_24052117', ext: 'aar')  // Removed: provided by component dependencies
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
    implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '3.1.0'
    implementation 'javax.xml.stream:stax-api:1.0'
    implementation 'com.fasterxml:aalto-xml:1.2.2'



    implementation 'com.github.lzyzsd:jsbridge:1.0.4'
    implementation 'com.alibaba:fastjson:1.2.78'
    implementation 'com.github.yalantis:ucrop:2.2.4'
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    implementation 'com.github.li-xiaojun:XPopup:2.9.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.3'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.3'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android:6.8.0'
    implementation 'com.umeng.umsdk:apm:1.9.0'
    implementation 'com.zoho.salesiq:mobilisten:7.0.0'

//    implementation 'com.topdon.umeng:abtest:1.0.1'
//    implementation 'com.topdon.aliyun:auth-number:2.13.2.1@aar'
//    implementation 'com.topdon.aliyun:logger:2.2.1:release@aar'
//    implementation 'com.topdon.aliyun:main:2.2.1:release@aar'

    implementation files('libs/umeng-common-9.4.4+000.jar')
}