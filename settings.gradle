pluginManagement {
    repositories {
        google {
            mavenContent {
                includeGroupAndSubgroups("androidx")
                includeGroupAndSubgroups("com.android")
                includeGroupAndSubgroups("com.google")
            }
        }
        mavenCentral()
        gradlePluginPortal()
        // Enhanced plugin repositories for better performance
        maven { url = uri("https://jitpack.io") }
        maven { url = uri("https://maven.aliyun.com/repository/gradle-plugin") }
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google {
            mavenContent {
                includeGroupAndSubgroups("androidx")
                includeGroupAndSubgroups("com.android")
                includeGroupAndSubgroups("com.google")
            }
        }
        mavenCentral()
        maven { url = uri("https://jitpack.io") }
        maven { url = uri("https://maven.zohodl.com") }
        // Aliyun repository as fallback with enhanced configuration
        maven {
            url = uri("https://maven.aliyun.com/repository/public/")
            mavenContent {
                // Exclude sensitive groups for security
                excludeGroup("com.google.android.gms")
                excludeGroup("com.google.firebase")
            }
        }
        // Huawei HMS repository
        maven { 
            url = uri("https://developer.huawei.com/repo/")
            mavenContent {
                includeGroupAndSubgroups("com.huawei")
            }
        }
        
        // Local repository for custom libraries
        flatDir {
            dirs("libir/libs", "app/libs", "libir-demo/libs", "BleModule/libs")
        }
    }
    
    // Version catalog configuration is automatically loaded from gradle/libs.versions.toml
    // No need to explicitly declare it in Gradle 8.11+
}

// Enhanced Gradle Enterprise configuration for build insights
gradle.settingsEvaluated {
    if (System.getenv("CI") != null) {
        buildCache {
            local {
                enabled = true
                directory = file("build-cache")
                // Removed deprecated removeUnusedEntriesAfterDays - Gradle 8.11+ handles cache cleanup automatically
            }
        }
    }
}

rootProject.name = "TopInfrared"

// Include all modules with modern syntax
include(":app")
include(":commonlibrary")
include(":component:CommonComponent")
include(":component:pseudo")
include(":component:thermal-ir")
include(":component:thermal-lite")
include(":component:transfer")
include(":component:user")
include(":libapp")
include(":libcom")
include(":libir")
include(":libmatrix")
include(":libmenu")
include(":libui")
include(":libir-demo")
include(":BleModule")

