{
  "protocol": {
    "name": "IRCamera Communication Protocol",
    "version": "1.0.0",
    "description": "JSON-based communication protocol for IRCamera PC-Android device coordination"
  },
  "message_types": {
    "device_lifecycle": {
      "device_register": {
        "direction": "device_to_pc",
        "description": "Device registration message",
        "required_fields": ["device_id", "device_type", "capabilities", "ip_address", "port"],
        "optional_fields": ["battery_level", "gsr_mode", "device_name"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "device_register"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string", "pattern": "^[A-Za-z0-9_-]+$"},
            "device_type": {"type": "string", "enum": ["android_phone", "android_tablet", "thermal_camera", "depth_camera"]},
            "capabilities": {
              "type": "array",
              "items": {"type": "string", "enum": ["thermal", "visual", "depth", "audio", "gsr", "imu", "gps"]}
            },
            "ip_address": {"type": "string", "format": "ipv4"},
            "port": {"type": "integer", "minimum": 1024, "maximum": 65535},
            "battery_level": {"type": "integer", "minimum": 0, "maximum": 100},
            "gsr_mode": {"type": "string", "enum": ["local", "bridged"]},
            "device_name": {"type": "string", "maxLength": 64}
          }
        }
      },
      "device_heartbeat": {
        "direction": "device_to_pc",
        "description": "Device heartbeat message",
        "required_fields": ["device_id"],
        "optional_fields": ["battery_level", "state", "current_session_id"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "device_heartbeat"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string"},
            "battery_level": {"type": "integer", "minimum": 0, "maximum": 100},
            "state": {"type": "string", "enum": ["idle", "recording", "error"]},
            "current_session_id": {"type": "string"}
          }
        }
      },
      "device_status": {
        "direction": "device_to_pc",
        "description": "Device status update message",
        "required_fields": ["device_id", "status"],
        "optional_fields": ["error_message", "data_stats"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "device_status"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string"},
            "status": {"type": "string", "enum": ["ready", "recording", "transferring", "error", "low_battery"]},
            "error_message": {"type": "string"},
            "data_stats": {
              "type": "object",
              "properties": {
                "storage_used_mb": {"type": "number"},
                "storage_available_mb": {"type": "number"},
                "samples_recorded": {"type": "integer"}
              }
            }
          }
        }
      }
    },
    "session_control": {
      "session_start": {
        "direction": "pc_to_device",
        "description": "Start session command",
        "required_fields": ["session_id", "session_name"],
        "optional_fields": ["recording_params", "sync_offset_ms"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "session_start"},
            "timestamp": {"type": "string", "format": "date-time"},
            "session_id": {"type": "string"},
            "session_name": {"type": "string"},
            "recording_params": {
              "type": "object",
              "properties": {
                "thermal_fps": {"type": "integer", "minimum": 1, "maximum": 60},
                "visual_fps": {"type": "integer", "minimum": 1, "maximum": 60},
                "audio_sample_rate": {"type": "integer", "enum": [8000, 16000, 44100, 48000]},
                "gsr_sample_rate": {"type": "integer", "minimum": 1, "maximum": 1000},
                "imu_sample_rate": {"type": "integer", "minimum": 1, "maximum": 1000}
              }
            },
            "sync_offset_ms": {"type": "integer"}
          }
        }
      },
      "session_stop": {
        "direction": "pc_to_device",
        "description": "Stop session command",
        "required_fields": ["session_id"],
        "optional_fields": [],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "session_stop"},
            "timestamp": {"type": "string", "format": "date-time"},
            "session_id": {"type": "string"}
          }
        }
      },
      "recording_start": {
        "direction": "pc_to_device",
        "description": "Start recording command",
        "required_fields": ["session_id"],
        "optional_fields": ["start_timestamp", "recording_duration_s"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "recording_start"},
            "timestamp": {"type": "string", "format": "date-time"},
            "session_id": {"type": "string"},
            "start_timestamp": {"type": "string", "format": "date-time"},
            "recording_duration_s": {"type": "integer", "minimum": 1}
          }
        }
      },
      "recording_stop": {
        "direction": "pc_to_device",
        "description": "Stop recording command",
        "required_fields": ["session_id"],
        "optional_fields": [],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "recording_stop"},
            "timestamp": {"type": "string", "format": "date-time"},
            "session_id": {"type": "string"}
          }
        }
      }
    },
    "synchronization": {
      "sync_mark": {
        "direction": "bidirectional",
        "description": "Synchronization marker message",
        "required_fields": ["mark_type", "mark_id"],
        "optional_fields": ["metadata", "session_id"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "sync_mark"},
            "timestamp": {"type": "string", "format": "date-time"},
            "mark_type": {"type": "string", "enum": ["manual_mark", "auto_mark", "event_mark", "calibration_mark"]},
            "mark_id": {"type": "string"},
            "metadata": {
              "type": "object",
              "properties": {
                "description": {"type": "string"},
                "user_id": {"type": "string"},
                "coordinates": {
                  "type": "object",
                  "properties": {
                    "x": {"type": "number"},
                    "y": {"type": "number"},
                    "z": {"type": "number"}
                  }
                }
              }
            },
            "session_id": {"type": "string"}
          }
        }
      },
      "sync_flash": {
        "direction": "pc_to_device",
        "description": "Visual synchronization flash command",
        "required_fields": [],
        "optional_fields": ["duration_ms", "intensity", "color"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "sync_flash"},
            "timestamp": {"type": "string", "format": "date-time"},
            "duration_ms": {"type": "integer", "minimum": 10, "maximum": 5000, "default": 100},
            "intensity": {"type": "number", "minimum": 0.1, "maximum": 1.0, "default": 1.0},
            "color": {"type": "string", "enum": ["white", "red", "green", "blue"], "default": "white"}
          }
        }
      },
      "time_sync_request": {
        "direction": "device_to_pc", 
        "description": "Time synchronization request",
        "required_fields": ["device_id"],
        "optional_fields": ["client_timestamp"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "time_sync_request"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string"},
            "client_timestamp": {"type": "string", "format": "date-time"}
          }
        }
      },
      "time_sync_response": {
        "direction": "pc_to_device",
        "description": "Time synchronization response",
        "required_fields": ["server_timestamp"],
        "optional_fields": ["client_timestamp", "processing_delay_ms"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "time_sync_response"},
            "timestamp": {"type": "string", "format": "date-time"},
            "server_timestamp": {"type": "string", "format": "date-time"},
            "client_timestamp": {"type": "string", "format": "date-time"},
            "processing_delay_ms": {"type": "number"}
          }
        }
      }
    },
    "file_transfer": {
      "file_transfer_request": {
        "direction": "device_to_pc",
        "description": "File transfer request message",
        "required_fields": ["device_id", "file_info"],
        "optional_fields": ["session_id", "priority"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "file_transfer_request"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string"},
            "session_id": {"type": "string"},
            "file_info": {
              "type": "object",
              "properties": {
                "filename": {"type": "string"},
                "file_type": {"type": "string", "enum": ["thermal", "visual", "depth", "audio", "gsr", "imu", "metadata"]},
                "file_size": {"type": "integer", "minimum": 0},
                "checksum": {"type": "string"},
                "checksum_algorithm": {"type": "string", "enum": ["sha256", "md5"], "default": "sha256"},
                "compression": {"type": "string", "enum": ["none", "gzip", "lz4"]},
                "encoding": {"type": "string", "default": "utf-8"}
              },
              "required": ["filename", "file_type", "file_size", "checksum"]
            },
            "priority": {"type": "integer", "minimum": 1, "maximum": 10, "default": 5}
          }
        }
      },
      "file_transfer_complete": {
        "direction": "device_to_pc",
        "description": "File transfer completion notification",
        "required_fields": ["device_id", "transfer_id", "status"],
        "optional_fields": ["error_message", "bytes_transferred"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "file_transfer_complete"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string"},
            "transfer_id": {"type": "string"},
            "status": {"type": "string", "enum": ["success", "error", "cancelled"]},
            "error_message": {"type": "string"},
            "bytes_transferred": {"type": "integer", "minimum": 0}
          }
        }
      },
      "file_chunk": {
        "direction": "device_to_pc",
        "description": "File data chunk message",
        "required_fields": ["transfer_id", "chunk_index", "chunk_data"],
        "optional_fields": ["is_final_chunk", "chunk_checksum"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "file_chunk"},
            "timestamp": {"type": "string", "format": "date-time"},
            "transfer_id": {"type": "string"},
            "chunk_index": {"type": "integer", "minimum": 0},
            "chunk_data": {"type": "string", "contentEncoding": "base64"},
            "is_final_chunk": {"type": "boolean", "default": false},
            "chunk_checksum": {"type": "string"}
          }
        }
      }
    },
    "gsr_data": {
      "gsr_data_batch": {
        "direction": "device_to_pc",
        "description": "Batch of GSR sensor data",
        "required_fields": ["device_id", "data_points"],
        "optional_fields": ["session_id", "quality_metrics"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "gsr_data_batch"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string"},
            "session_id": {"type": "string"},
            "data_points": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "timestamp": {"type": "string", "format": "date-time"},
                  "value": {"type": "number"},
                  "unit": {"type": "string", "enum": ["microsiemens", "ohms"], "default": "microsiemens"},
                  "quality": {"type": "number", "minimum": 0, "maximum": 1}
                },
                "required": ["timestamp", "value"]
              }
            },
            "quality_metrics": {
              "type": "object",
              "properties": {
                "avg_quality": {"type": "number", "minimum": 0, "maximum": 1},
                "noise_level": {"type": "number"},
                "saturation_rate": {"type": "number", "minimum": 0, "maximum": 1}
              }
            }
          }
        }
      },
      "gsr_leader_election": {
        "direction": "bidirectional",
        "description": "GSR leader election message",
        "required_fields": ["device_id", "election_type"],
        "optional_fields": ["priority_score", "capabilities"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "gsr_leader_election"},
            "timestamp": {"type": "string", "format": "date-time"},
            "device_id": {"type": "string"},
            "election_type": {"type": "string", "enum": ["candidate", "leader", "acknowledge"]},
            "priority_score": {"type": "number", "minimum": 0},
            "capabilities": {
              "type": "object",
              "properties": {
                "bridged_mode_support": {"type": "boolean"},
                "sampling_rates": {"type": "array", "items": {"type": "integer"}},
                "quality_filtering": {"type": "boolean"}
              }
            }
          }
        }
      }
    },
    "responses": {
      "ack": {
        "direction": "bidirectional",
        "description": "Acknowledgment message",
        "required_fields": ["ack_for"],
        "optional_fields": ["status", "message"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "ack"},
            "timestamp": {"type": "string", "format": "date-time"},
            "ack_for": {"type": "string"},
            "status": {"type": "string", "enum": ["success", "error"], "default": "success"},
            "message": {"type": "string"}
          }
        }
      },
      "error": {
        "direction": "bidirectional",
        "description": "Error message",
        "required_fields": ["error_code", "error_message"],
        "optional_fields": ["context", "retry_after_s"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "error"},
            "timestamp": {"type": "string", "format": "date-time"},
            "error_code": {"type": "string", "enum": ["INVALID_MESSAGE", "UNSUPPORTED_OPERATION", "DEVICE_BUSY", "SESSION_NOT_FOUND", "PERMISSION_DENIED", "RESOURCE_UNAVAILABLE", "TIMEOUT"]},
            "error_message": {"type": "string"},
            "context": {
              "type": "object",
              "properties": {
                "request_id": {"type": "string"},
                "device_id": {"type": "string"},
                "session_id": {"type": "string"}
              }
            },
            "retry_after_s": {"type": "integer", "minimum": 1}
          }
        }
      }
    },
    "system_integration": {
      "bluetooth_scan_request": {
        "direction": "pc_to_device",
        "description": "Request device to scan for Bluetooth devices",
        "required_fields": ["scan_duration"],
        "optional_fields": ["filter_ircamera_only"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "bluetooth_scan_request"},
            "timestamp": {"type": "string", "format": "date-time"},
            "scan_duration": {"type": "integer", "minimum": 5, "maximum": 60},
            "filter_ircamera_only": {"type": "boolean"}
          }
        }
      },
      "bluetooth_scan_result": {
        "direction": "device_to_pc",
        "description": "Bluetooth scan results from device",
        "required_fields": ["devices"],
        "optional_fields": ["scan_complete"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "bluetooth_scan_result"},
            "timestamp": {"type": "string", "format": "date-time"},
            "devices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {"type": "string", "pattern": "^[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}$"},
                  "name": {"type": "string"},
                  "rssi": {"type": "integer", "minimum": -100, "maximum": 0},
                  "device_type": {"type": "string", "enum": ["ble", "classic", "unknown"]},
                  "is_ircamera": {"type": "boolean"}
                },
                "required": ["address", "rssi", "device_type"]
              }
            },
            "scan_complete": {"type": "boolean"}
          }
        }
      },
      "bluetooth_connect_request": {
        "direction": "pc_to_device", 
        "description": "Request device to connect to Bluetooth device",
        "required_fields": ["target_address"],
        "optional_fields": ["connection_timeout"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "bluetooth_connect_request"},
            "timestamp": {"type": "string", "format": "date-time"},
            "target_address": {"type": "string", "pattern": "^[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}$"},
            "connection_timeout": {"type": "integer", "minimum": 5, "maximum": 60}
          }
        }
      },
      "bluetooth_connection_status": {
        "direction": "device_to_pc",
        "description": "Bluetooth connection status update",
        "required_fields": ["target_address", "status"],
        "optional_fields": ["error_message"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "bluetooth_connection_status"},
            "timestamp": {"type": "string", "format": "date-time"},
            "target_address": {"type": "string", "pattern": "^[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}$"},
            "status": {"type": "string", "enum": ["connecting", "connected", "disconnected", "error"]},
            "error_message": {"type": "string"}
          }
        }
      },
      "wifi_scan_request": {
        "direction": "pc_to_device",
        "description": "Request device to scan for WiFi networks",
        "required_fields": [],
        "optional_fields": ["filter_ircamera_only"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "wifi_scan_request"},
            "timestamp": {"type": "string", "format": "date-time"},
            "filter_ircamera_only": {"type": "boolean"}
          }
        }
      },
      "wifi_scan_result": {
        "direction": "device_to_pc",
        "description": "WiFi scan results from device",
        "required_fields": ["networks"],
        "optional_fields": ["scan_complete"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "wifi_scan_result"},
            "timestamp": {"type": "string", "format": "date-time"},
            "networks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ssid": {"type": "string"},
                  "bssid": {"type": "string", "pattern": "^[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}:[0-9A-Fa-f]{2}$"},
                  "signal_strength": {"type": "integer", "minimum": -100, "maximum": 0},
                  "frequency": {"type": "integer", "minimum": 2400, "maximum": 6000},
                  "security_type": {"type": "string", "enum": ["open", "wep", "wpa", "wpa2", "wpa3", "enterprise"]},
                  "channel": {"type": "integer", "minimum": 1, "maximum": 196},
                  "is_ircamera_hotspot": {"type": "boolean"}
                },
                "required": ["ssid", "signal_strength", "security_type"]
              }
            },
            "scan_complete": {"type": "boolean"}
          }
        }
      },
      "wifi_connect_request": {
        "direction": "pc_to_device",
        "description": "Request device to connect to WiFi network",
        "required_fields": ["ssid"],
        "optional_fields": ["password", "connection_timeout"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "wifi_connect_request"},
            "timestamp": {"type": "string", "format": "date-time"},
            "ssid": {"type": "string"},
            "password": {"type": "string"},
            "connection_timeout": {"type": "integer", "minimum": 10, "maximum": 120}
          }
        }
      },
      "wifi_connection_status": {
        "direction": "device_to_pc",
        "description": "WiFi connection status update",
        "required_fields": ["ssid", "status"],
        "optional_fields": ["ip_address", "error_message"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "wifi_connection_status"},
            "timestamp": {"type": "string", "format": "date-time"},
            "ssid": {"type": "string"},
            "status": {"type": "string", "enum": ["connecting", "connected", "disconnected", "error"]},
            "ip_address": {"type": "string", "format": "ipv4"},
            "error_message": {"type": "string"}
          }
        }
      },
      "hotspot_control_request": {
        "direction": "pc_to_device",
        "description": "Request to start/stop mobile hotspot",
        "required_fields": ["action"],
        "optional_fields": ["ssid", "password", "channel"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "hotspot_control_request"},
            "timestamp": {"type": "string", "format": "date-time"},
            "action": {"type": "string", "enum": ["start", "stop"]},
            "ssid": {"type": "string"},
            "password": {"type": "string"},
            "channel": {"type": "integer", "minimum": 1, "maximum": 13}
          }
        }
      },
      "hotspot_status": {
        "direction": "device_to_pc",
        "description": "Mobile hotspot status update",
        "required_fields": ["status"],
        "optional_fields": ["ssid", "connected_clients", "error_message"],
        "schema": {
          "type": "object",
          "properties": {
            "message_type": {"type": "string", "const": "hotspot_status"},
            "timestamp": {"type": "string", "format": "date-time"},
            "status": {"type": "string", "enum": ["stopped", "starting", "running", "stopping", "error"]},
            "ssid": {"type": "string"},
            "connected_clients": {"type": "integer", "minimum": 0},
            "error_message": {"type": "string"}
          }
        }
      }
    }
  },
  "common_fields": {
    "message_type": {
      "type": "string", 
      "description": "Type of message being sent",
      "required": true
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp when message was created",
      "required": true
    },
    "message_id": {
      "type": "string",
      "description": "Unique identifier for message (UUID recommended)",
      "required": false
    },
    "correlation_id": {
      "type": "string", 
      "description": "ID to correlate request/response pairs",
      "required": false
    }
  },
  "transport": {
    "protocol": "TCP",
    "encoding": "UTF-8",
    "message_framing": {
      "type": "length_prefixed",
      "length_bytes": 4,
      "byte_order": "big_endian",
      "max_message_size": 16777216
    },
    "connection": {
      "keep_alive": true,
      "timeout_s": 30,
      "heartbeat_interval_s": 5
    }
  },
  "validation": {
    "schema_validation": true,
    "required_fields_check": true,
    "timestamp_tolerance_ms": 5000,
    "message_id_uniqueness": true
  }
}